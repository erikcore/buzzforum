/*
 buzzfeed_forum 2015-11-09 
*/
"use strict";function handleNewHash(){var a=window.location.pathname.split("/"),b=React.createElement(Application,{location:a});ReactDOM.render(b,document.getElementById("content"))}var currentThreads={},currentThreadsArray=[],currentThreadsNextPage=null,ForumBox=React.createClass({loadThreadsFromServer:function(){$.ajax({url:currentThreadsNextPage?currentThreadsNextPage:this.props.url,dataType:"json",cache:!1,success:function(a){Array.prototype.push.apply(currentThreadsArray,a.results),a.results.forEach(function(a){currentThreads[a.id]=a}),this.setState({data:currentThreadsArray}),a.next?currentThreadsNextPage=a.next:$(".moreThreads").hide()}.bind(this),error:function(a,b,c){console.error(this.props.url,b,c.toString())}.bind(this)})},loadNextPage:function(a){a.preventDefault(),this.loadThreadsFromServer()},handleThreadSubmit:function(a){$.ajax({url:"/api/threads/",dataType:"json",type:"POST",data:a,success:function(a){currentThreadsArray.unshift(a),this.setState({data:currentThreadsArray})}.bind(this),error:function(a,b,c){console.error("/api/threads/",b,c.toString())}.bind(this)})},getInitialState:function(){return{data:currentThreadsArray}},componentDidMount:function(){0==currentThreadsArray.length&&this.loadThreadsFromServer()},render:function(){return React.createElement("div",{className:"forumBox"},React.createElement("div",{id:"recentThreads"},"RECENT THREADS"),React.createElement(ThreadList,{data:this.state.data}),React.createElement("a",{href:"#",className:"moreThreads",onClick:this.loadNextPage},"Load more threads!"),React.createElement(ThreadForm,{onThreadSubmit:this.handleThreadSubmit}))}}),ThreadList=React.createClass({render:function(){var a=this.props.data.map(function(a){return React.createElement(Thread,{thread:a})});return React.createElement("div",{className:"threadList"},a)}}),Thread=React.createClass({handleClick:function(a){a.preventDefault(),history.pushState(null,null,window.location.pathname+"thread/"+this.props.thread.id),handleNewHash()},render:function(){return React.createElement("div",{className:"thread"},React.createElement("div",{className:"threadTitle"},React.createElement("a",{href:"#",onClick:this.handleClick},this.props.thread.title)),React.createElement("span",{className:"threadAttribute"}," posted by ",this.props.thread.username," | ",this.props.thread.comments?this.props.thread.comments.length:0," comments"))}}),ThreadForm=React.createClass({handleSubmit:function(a){a.preventDefault();var b=this.refs.username.value.trim(),c=this.refs.title.value.trim(),d=this.refs.description.value.trim();c&&(b||(b="Anonymous"),d||(d=""),this.props.onThreadSubmit({username:b,title:c,description:d}),this.refs.username.value="",this.refs.title.value="",this.refs.description.value="")},render:function(){return React.createElement("div",{className:"formWrapper"},React.createElement("form",{className:"threadForm",onSubmit:this.handleSubmit},React.createElement("input",{type:"text",placeholder:"Enter a title for your new thread",ref:"title"}),React.createElement("br",null),React.createElement("input",{type:"text",placeholder:"Enter your name (optional)",ref:"username"}),React.createElement("br",null),React.createElement("input",{type:"text",placeholder:"Enter a description of your new thread (optional)",ref:"description"}),React.createElement("br",null),React.createElement("input",{type:"submit",value:"Create thread!"})))}}),ThreadBox=React.createClass({handleCommentSubmit:function(a){$.ajax({url:"/api/comments/",dataType:"json",type:"POST",data:a,success:function(a){this.state.requestedThread.comments.unshift(a),this.setState({requestedThread:this.state.requestedThread})}.bind(this),error:function(a,b,c){console.error("/api/comments/",b,c.toString())}.bind(this)})},getInitialState:function(){return{requestedThread:{}}},componentDidMount:function(){currentThreads[this.props.threadId]?this.setState({requestedThread:currentThreads[this.props.threadId]}):$.ajax({url:"/api/threads/?format=json&id="+this.props.threadId,dataType:"json",cache:!1,success:function(a){this.setState({requestedThread:a.results[0]})}.bind(this),error:function(a,b,c){console.error("/api/threads/?format=json&id="+this.props.threadId,b,c.toString())}.bind(this)})},render:function(){return React.createElement("div",{className:"threadBox"},React.createElement("div",{className:"threadBoxTitle"},this.state.requestedThread.title),React.createElement("div",{className:"threadBoxDescription"},this.state.requestedThread.description),React.createElement("div",{className:"threadBoxThreadAuthor"},"Posted by ",this.state.requestedThread.username),React.createElement(CommentList,{data:this.state.requestedThread.comments}),React.createElement(CommentForm,{threadId:this.state.requestedThread.id,onCommentSubmit:this.handleCommentSubmit}))}}),CommentList=React.createClass({render:function(){var a=[];this.props.data&&(a=this.props.data);var b=a.map(function(a){return React.createElement(Comment,{comment:a})});return React.createElement("div",{className:"commentList"},b)}}),Comment=React.createClass({handleClick:function(a){a.preventDefault(),console.log("need to add a vote for "+this.props.comment.id),$.ajax({url:"/api/comments/"+this.props.comment.id+"/increment_score/",dataType:"json",type:"POST",data:{},success:function(a){$("#commentScore_"+a.id).text(parseInt($("#commentScore_"+a.id).text().trim())+1)}.bind(this),error:function(a,b,c){console.error("/api/comments/"+this.props.comment.id+"/increment_score/",b,c.toString())}.bind(this)})},render:function(){return React.createElement("div",{className:"comment"},React.createElement("div",{className:"commentText"},React.createElement("div",{className:"voteAndScore"},React.createElement("div",null,React.createElement("a",{className:"commentVote",href:"#",onClick:this.handleClick},"â–²")),React.createElement("div",null,React.createElement("span",{id:"commentScore_"+this.props.comment.id},this.props.comment.score))),React.createElement("div",null,this.props.comment.text),React.createElement("div",{className:"commentAttribute"},"by ",this.props.comment.username)))}}),CommentForm=React.createClass({handleSubmit:function(a){a.preventDefault();var b=this.refs.threadId.value.trim(),c=this.refs.text.value.trim(),d=this.refs.username.value.trim();c&&(d||(d="Anonymous"),this.props.onCommentSubmit({thread:"/api/threads/"+b+"/",username:d,text:c}),this.refs.threadId.value="",this.refs.username.value="",this.refs.text.value="")},render:function(){return React.createElement("div",{className:"commentFormWrapper",onSubmit:this.handleSubmit},React.createElement("form",{className:"commentForm"},React.createElement("input",{type:"hidden",value:parseInt(this.props.threadId),ref:"threadId"}),React.createElement("input",{type:"text",placeholder:"Enter your comment...",ref:"text"}),React.createElement("br",null),React.createElement("input",{type:"text",placeholder:"Enter your name (optional)",ref:"username"}),React.createElement("br",null),React.createElement("input",{type:"submit",value:"Post comment!"})))}}),Application=React.createClass({render:function(){switch(this.props.location[1]){case"":return React.createElement(ForumBox,{url:"/api/threads/?format=json"});case"thread":return React.createElement(ThreadBox,{threadId:this.props.location[2]});default:return React.createElement("div",null,React.createElement("h1",null,"CAN'T FIND WHAT YOU'RE LOOKING FOR BRAH."))}}});window.addEventListener("popstate",function(a){handleNewHash()}),handleNewHash(),window.addEventListener("hashchange",handleNewHash,!1);